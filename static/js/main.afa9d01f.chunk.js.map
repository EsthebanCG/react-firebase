{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","console","log","map","key","layout","onClick","whileHover","opacity","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afa9d01f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>Gaala</h1>\n      <h2>Image gallery</h2>\n      <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Vero perspiciatis esse et.</p>\n    </div>\n  )\n}\n\nexport default Title;","import * as firebase from 'firebase/app'\r\nimport 'firebase/storage'\r\nimport 'firebase/firestore'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDNd-sX3Mu2XyhZyM8_uwcF--QCsE-HGjk\",\r\n    authDomain: \"firegram-album.firebaseapp.com\",\r\n    databaseURL: \"https://firegram-album.firebaseio.com\",\r\n    projectId: \"firegram-album\",\r\n    storageBucket: \"firegram-album.appspot.com\",\r\n    messagingSenderId: \"69074881817\",\r\n    appId: \"1:69074881817:web:26a2f861273de0cf210988\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage()\r\nconst projectFirestore = firebase.firestore()\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp\r\n\r\nexport { projectStorage, projectFirestore, timestamp }","import { useState, useEffect } from 'react'\r\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config'\r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0)\r\n    const [error, setError] = useState(null)\r\n    const [url, setUrl] = useState(null)\r\n\r\n    useEffect(() => {\r\n        //References\r\n        const storageRef = projectStorage.ref(file.name)\r\n        const collectionRef = projectFirestore.collection('images')\r\n\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes * 100)\r\n            setProgress(percentage)\r\n        }, (err) => {\r\n            setError(err)\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL()\r\n            const createdAt = timestamp()\r\n            collectionRef.add({\r\n                url,\r\n                createdAt\r\n            })\r\n            setUrl(url)\r\n        })\r\n    }, [file])\r\n\r\n    return { progress, url, error }\r\n}\r\n\r\nexport default useStorage","import React, { useEffect } from 'react'\r\nimport useStorage from '../hooks/useStorage'\r\nimport { motion } from 'framer-motion'\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n\r\n    const { url, progress } = useStorage(file)\r\n\r\n    useEffect(() => {\r\n        if (url) {\r\n            setFile(null)\r\n        }\r\n    }, [url, setFile])\r\n\r\n    return (\r\n        <motion.div className=\"progress-bar\"\r\n            initial={{ width: 0 }}\r\n            animate={{ width: progress + '%' }}>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar","import React, { useState } from 'react'\r\n\r\nimport ProgressBar from '../comps/ProgressBar'\r\n\r\nconst UploadForm = () => {\r\n\r\n    const [file, setFile] = useState(null)\r\n    const [error, setError] = useState(null)\r\n\r\n    const types = ['image/png', 'image/jpeg']\r\n\r\n    const changeHandler = (e) => {\r\n\r\n\r\n        let selected = e.target.files[0]\r\n\r\n        if (selected && types.includes(selected.type)) {\r\n\r\n            setFile(selected)\r\n            setError('')\r\n\r\n        } else {\r\n            setFile(null)\r\n            setError('Please Select an image file (png or jpeg)')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <label>\r\n                <input type=\"file\" onChange={changeHandler} />\r\n                <span>+</span>\r\n            </label>\r\n            <div className='output' >\r\n                {error && <div className=\"error\" >{error}</div>}\r\n                {file && <div>{file.name} </div>}\r\n                {file && <ProgressBar file={file} setFile={setFile} />}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default UploadForm","import { useState, useEffect } from 'react'\r\nimport { projectFirestore } from '../firebase/config'\r\n\r\nconst useFirestore = (collection) => {\r\n    const [docs, setDocs] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        const unsub = projectFirestore.collection(collection)\r\n            .orderBy('createdAt', 'desc')\r\n            .onSnapshot((snap) => {\r\n                let documents = []\r\n                snap.forEach(doc => {\r\n                    documents.push({ ...doc.data(), id: doc.id })\r\n                })\r\n                setDocs(documents)\r\n            })\r\n        return () => unsub()\r\n\r\n    }, [collection])\r\n\r\n    return { docs }\r\n}\r\n\r\nexport default useFirestore","import React from 'react'\r\nimport useFirestore from '../hooks/useFirestore'\r\nimport { motion } from 'framer-motion'\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n\r\n    const { docs } = useFirestore('images')\r\n    console.log(docs)\r\n\r\n    return (\r\n        <div className=\"img-grid\">\r\n            {docs && docs.map(doc => (\r\n                <motion.div className=\"img-wrap\" key={doc.id}\r\n                    layout\r\n                    onClick={() => setSelectedImg(doc.url)}\r\n                    whileHover={{\r\n                        opacity: 1\r\n                    }}>\r\n\r\n                    <motion.img src={doc.url} alt='uploaded'\r\n                        initial={{\r\n                            opacity: 0\r\n                        }}\r\n                        animate={{\r\n                            opacity: 1\r\n                        }}\r\n                        transition={{\r\n                            delay: 1\r\n                        }}\r\n                    />\r\n                </motion.div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGrid","import React from 'react'\r\nimport { motion } from 'framer-motion'\r\n\r\nconst Modal = ({ selectedImg, setSelectedImg }) => {\r\n\r\n    // const testing = () => {\r\n    //     console.log('xd')\r\n    // }\r\n    const handleClick = (e) => {\r\n        if (e.target.classList.contains('backdrop')) {\r\n            setSelectedImg(null)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <motion.div className=\"backdrop\" onClick={handleClick}\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n        >\r\n            <img src={selectedImg} alt=\"enlarged pic\" />\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Modal","import React, { useState } from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid'\nimport Modal from './comps/Modal'\n\nfunction App() {\n\n  const [selectedImg, setSelectedImg] = useState(null)\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      {selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}